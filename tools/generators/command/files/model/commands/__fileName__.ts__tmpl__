import {FromSchema} from "json-schema-to-ts";
import {Writable} from "json-schema-to-ts/lib/types/type-utils";
import {DeepReadonly} from "json-schema-to-ts/lib/types/type-utils/readonly";
import {makeCommand} from "@app/messaging/command";
import definitions from "@app/<%= service.fileName %>/read-model/types/definitions";
import {references} from "@app/<%= service.fileName %>/read-model/types/references";

export const <%= className %>Schema = <%- toJSON(schema) %> as const;

export type <%= className %> = DeepReadonly<FromSchema<
  typeof <%= className %>Schema,
  {references: references}
>>;

export const <%= propertyName %> = makeCommand<<%= className %>>(
  '<%= service.className %>.<%= className %>',
  <%= className %>Schema as Writable<typeof <%= className %>Schema>,
  definitions
);
